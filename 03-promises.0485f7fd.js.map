{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,GADuBC,SAASC,cAAc,yDACvCD,SAASC,cAAc,UAC9BC,EAAcH,EAAKE,cAAc,mBACjCE,EAAaJ,EAAKE,cAAc,kBAEhCG,EAAYL,EAAKE,cAAc,iBAqBrC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA5BPR,EAAKgB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAMN,IAJA,IAAMC,EAASC,SAASjB,EAAYkB,OAC9BC,EAAQF,SAAShB,EAAWiB,OAC5BE,EAAOH,SAASf,EAAUgB,OAEvBG,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAChClB,EAAckB,EAAGF,EAAQE,EAAID,GAC1BE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst createPromisesButton = document.querySelector('button[type=\"submit\"],[textContent=\"Create promises\"]');\nconst form = document.querySelector('.form');\nconst amountInput = form.querySelector('[name=\"amount\"]');\nconst delayInput = form.querySelector('[name=\"delay\"]');\n\nconst stepInput = form.querySelector('[name=\"step\"]');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const amount = parseInt(amountInput.value);\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)})\n};"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","amount","parseInt","value","delay1","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0485f7fd.js.map"}